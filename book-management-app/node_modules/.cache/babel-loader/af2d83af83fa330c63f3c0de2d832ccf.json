{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rporter\\\\eclipse\\\\Management-System\\\\book-management-app\\\\src\\\\components\\\\bodyPage\\\\registerComponent.js\";\nimport { Component } from \"react\";\nimport AuthService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class RegisterComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(this.state.username, this.state.password).then(response => {\n        this.setState({\n          message: response.data.message,\n          successful: true\n        });\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.setState({\n          successful: false,\n          message: resMessage\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"register page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/rporter/eclipse/Management-System/book-management-app/src/components/bodyPage/registerComponent.js"],"names":["Component","AuthService","RegisterComponent","constructor","props","handleRegister","bind","onChangeUsername","onChangePassword","state","username","password","successful","message","e","setState","target","value","preventDefault","form","validateAll","checkBtn","context","_errors","length","register","then","response","data","error","resMessage","toString","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAEA,eAAe,MAAMC,iBAAN,SAAgCF,SAAhC,CAA0C;AACrDG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;AAEA,SAAKG,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,UAAU,EAAE,KAHH;AAITC,MAAAA,OAAO,EAAE;AAJA,KAAb;AAMH;;AAEDN,EAAAA,gBAAgB,CAACO,CAAD,EAAG;AACf,SAAKC,QAAL,CAAc;AAACL,MAAAA,QAAQ,EAAEI,CAAC,CAACE,MAAF,CAASC;AAApB,KAAd;AACH;;AAEDT,EAAAA,gBAAgB,CAACM,CAAD,EAAG;AACf,SAAKC,QAAL,CAAc;AAACJ,MAAAA,QAAQ,EAAEG,CAAC,CAACE,MAAF,CAASC;AAApB,KAAd;AACH;;AAEDZ,EAAAA,cAAc,CAACS,CAAD,EAAG;AACbA,IAAAA,CAAC,CAACI,cAAF;AAEA,SAAKH,QAAL,CAAc;AACVF,MAAAA,OAAO,EAAE,EADC;AAEVD,MAAAA,UAAU,EAAE;AAFF,KAAd;AAKA,SAAKO,IAAL,CAAUC,WAAV;;AAEA,QAAG,KAAKC,QAAL,CAAcC,OAAd,CAAsBC,OAAtB,CAA8BC,MAA9B,KAAyC,CAA5C,EAA8C;AAC1CvB,MAAAA,WAAW,CAACwB,QAAZ,CACI,KAAKhB,KAAL,CAAWC,QADf,EAEI,KAAKD,KAAL,CAAWE,QAFf,EAGEe,IAHF,CAIIC,QAAQ,IAAI;AACR,aAAKZ,QAAL,CAAc;AACVF,UAAAA,OAAO,EAAEc,QAAQ,CAACC,IAAT,CAAcf,OADb;AAEVD,UAAAA,UAAU,EAAE;AAFF,SAAd;AAIH,OATL,EAUIiB,KAAK,IAAI;AACL,cAAMC,UAAU,GACXD,KAAK,CAACF,QAAN,IACDE,KAAK,CAACF,QAAN,CAAeC,IADd,IAEDC,KAAK,CAACF,QAAN,CAAeC,IAAf,CAAoBf,OAFpB,IAGAgB,KAAK,CAAChB,OAHN,IAIAgB,KAAK,CAACE,QAAN,EALJ;AAOI,aAAKhB,QAAL,CAAc;AACVH,UAAAA,UAAU,EAAE,KADF;AAEVC,UAAAA,OAAO,EAAEiB;AAFC,SAAd;AAIP,OAtBL;AAwBH;AACJ;;AAEDE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAjEoD","sourcesContent":["import { Component } from \"react\";\r\nimport AuthService from '../services/authService'\r\n\r\nexport default class RegisterComponent extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleRegister = this.handleRegister.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        \r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            successful: false,\r\n            message: \"\"\r\n        };\r\n    }\r\n    \r\n    onChangeUsername(e){\r\n        this.setState({username: e.target.value});\r\n    }\r\n\r\n    onChangePassword(e){\r\n        this.setState({password: e.target.value});\r\n    }\r\n\r\n    handleRegister(e){\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            message: \"\",\r\n            successful: false\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if(this.checkBtn.context._errors.length === 0){\r\n            AuthService.register(\r\n                this.state.username,\r\n                this.state.password\r\n            ).then(\r\n                response => {\r\n                    this.setState({\r\n                        message: response.data.message,\r\n                        successful: true\r\n                    });\r\n                },\r\n                error => {\r\n                    const resMessage = \r\n                        (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                        this.setState({\r\n                            successful: false,\r\n                            message: resMessage\r\n                        });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>register page</div>\r\n        );\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}