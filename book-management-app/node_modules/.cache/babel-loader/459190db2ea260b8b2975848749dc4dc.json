{"ast":null,"code":"import axios from \"axios\";\nimport authHeader from './authHeader';\nconst rootCopyURL = \"http://localhost:7071/copies/\";\nconst rootUserURL = \"http://localhost:7071/users/\";\n\nlet testUrl = () => {\n  try {\n    let pobj = axios.get(rootCopyURL);\n    return pobj;\n  } catch (exception) {\n    console.log(rootCopyURL + \": not correct \" + exception);\n  }\n};\n\nlet getCatalog = () => {\n  try {\n    let pobj = axios.get(rootCopyURL + \"catalogAvail\", {\n      headers: authHeader()\n    });\n    /*pobj.then((response) => {\r\n        console.log(JSON.stringify(response.data, null, 3));\r\n    });*/\n\n    return pobj;\n  } catch (exception) {\n    console.log(rootCopyURL + \"catalog: not correct \" + exception);\n  }\n};\n\nlet getMyBooks = username => {\n  try {\n    let pobj = axios.get(rootUserURL + \"mybooks/\" + username, {\n      headers: authHeader()\n    });\n    /*pobj.then((response) => {\r\n        console.log(JSON.stringify(response.data, null, 3));\r\n    });*/\n\n    return pobj;\n  } catch (exception) {\n    console.log(rootCopyURL + \"mybooks/\" + username + \": not correct \" + exception);\n  }\n};\n\nlet checkOut = (bookId, username) => {\n  try {\n    let pobj = axios.put(rootUserURL + \"checkOut/\" + bookId + \"?username=\" + username, {}, {\n      headers: authHeader()\n    });\n    /*pobj.then((response) => {\r\n        console.log(JSON.stringify(response.data, null, 3));\r\n    });*/\n\n    return pobj;\n  } catch (exception) {\n    console.log(rootUserURL + \"checkOut/\" + bookId + \"?username=\" + username + \": not correct\" + exception);\n  }\n};\n\nlet checkIn = bookId => {\n  try {\n    let pobj = axios.put(rootUserURL + \"checkIn/\" + bookId, {}, {\n      headers: authHeader()\n    });\n    /*pobj.then((response) => {\r\n        console.log(JSON.stringify(response.data, null, 3));\r\n    });*/\n\n    return pobj;\n  } catch (exception) {\n    console.log(rootUserURL + \"checkIn/\" + bookId + \": not correct\" + exception);\n  }\n};\n\nlet getCheckedOut = () => {\n  try {\n    let pobj = axios.get(rootCopyURL + \"checkedOut\", {\n      headers: authHeader()\n    });\n    /*pobj.then((response) => {\r\n        console.log(JSON.stringify(response.data, null, 3));\r\n    });*/\n\n    return pobj;\n  } catch (exception) {\n    console.log(rootCopyURL + \"checkedOut: not correct\" + exception);\n  }\n};\n\nlet addBook = (title, author, date) => {\n  try {\n    let pobj = axios.post(rootCopyURL + \"addBook?\", {}, {\n      headers: authHeader()\n    });\n    /*pobj.then((response) => {\r\n        console.log(JSON.stringify(response.data, null, 3));\r\n    });*/\n\n    return pobj;\n  } catch (exception) {\n    console.log(rootCopyURL + \"addBook: not correct\" + exception);\n  }\n};\n\nexport { testUrl, getCatalog, checkOut, getMyBooks, checkIn, getCheckedOut, addBook };","map":{"version":3,"sources":["C:/Users/rporter/eclipse/Management-System/book-management-app/src/components/services/catalogService.js"],"names":["axios","authHeader","rootCopyURL","rootUserURL","testUrl","pobj","get","exception","console","log","getCatalog","headers","getMyBooks","username","checkOut","bookId","put","checkIn","getCheckedOut","addBook","title","author","date","post"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport authHeader from './authHeader'\r\n\r\nconst rootCopyURL = \"http://localhost:7071/copies/\";\r\nconst rootUserURL = \"http://localhost:7071/users/\";\r\n\r\nlet testUrl = () => {\r\n    try{\r\n        let pobj = axios.get(rootCopyURL);\r\n        return pobj;\r\n    }\r\n    catch(exception){\r\n        console.log(rootCopyURL + \": not correct \" + (exception));\r\n    }\r\n}\r\n\r\nlet getCatalog = () => {\r\n    try{\r\n        let pobj = axios.get(rootCopyURL + \"catalogAvail\", {headers: authHeader()});\r\n\r\n        /*pobj.then((response) => {\r\n            console.log(JSON.stringify(response.data, null, 3));\r\n        });*/\r\n\r\n        return pobj;\r\n    }\r\n    catch(exception){\r\n        console.log(rootCopyURL + \"catalog: not correct \" + (exception));\r\n    }\r\n}\r\n\r\nlet getMyBooks = (username) => {\r\n    try{\r\n        let pobj = axios.get(rootUserURL + \"mybooks/\" + username, {headers: authHeader()});\r\n\r\n        /*pobj.then((response) => {\r\n            console.log(JSON.stringify(response.data, null, 3));\r\n        });*/\r\n\r\n        return pobj;\r\n    }\r\n    catch(exception){\r\n        console.log(rootCopyURL + \"mybooks/\" + username + \": not correct \" + (exception));\r\n    }\r\n}\r\n\r\nlet checkOut = (bookId, username) => {\r\n    try{\r\n        let pobj = axios.put(rootUserURL + \"checkOut/\" + bookId + \"?username=\" + username, {}, {headers: authHeader()});\r\n        \r\n        /*pobj.then((response) => {\r\n            console.log(JSON.stringify(response.data, null, 3));\r\n        });*/\r\n\r\n        return pobj;\r\n    }\r\n    catch(exception){\r\n        console.log(rootUserURL + \"checkOut/\" + bookId + \"?username=\" + username + \": not correct\" + (exception));\r\n    }\r\n}\r\n\r\nlet checkIn = (bookId) => {\r\n    try{\r\n        let pobj = axios.put(rootUserURL + \"checkIn/\" + bookId, {}, {headers: authHeader()});\r\n        \r\n        /*pobj.then((response) => {\r\n            console.log(JSON.stringify(response.data, null, 3));\r\n        });*/\r\n\r\n        return pobj;\r\n    }\r\n    catch(exception){\r\n        console.log(rootUserURL + \"checkIn/\" + bookId + \": not correct\" + (exception));\r\n    }\r\n}\r\n\r\nlet getCheckedOut = () => {\r\n    try{\r\n        let pobj = axios.get(rootCopyURL + \"checkedOut\", {headers: authHeader()});\r\n        \r\n        /*pobj.then((response) => {\r\n            console.log(JSON.stringify(response.data, null, 3));\r\n        });*/\r\n\r\n        return pobj;\r\n    }\r\n    catch(exception){\r\n        console.log(rootCopyURL + \"checkedOut: not correct\" + (exception));\r\n    }\r\n}\r\n\r\nlet addBook = (title, author, date) => {\r\n    try{\r\n        let pobj = axios.post(rootCopyURL + \"addBook?\", {}, {headers: authHeader()});\r\n        \r\n        /*pobj.then((response) => {\r\n            console.log(JSON.stringify(response.data, null, 3));\r\n        });*/\r\n\r\n        return pobj;\r\n    }\r\n    catch(exception){\r\n        console.log(rootCopyURL + \"addBook: not correct\" + (exception));\r\n    }\r\n}\r\n\r\nexport {testUrl, getCatalog, checkOut, getMyBooks, checkIn, getCheckedOut, addBook};"]},"metadata":{},"sourceType":"module"}